name: Installation and test on Windows

on:
  push:
    branches:
      - 'ae-310action'
  schedule:
    - cron: "0 4 * * *"
  workflow_dispatch:
jobs:
  on-failure:
  runs-on: ubuntu-latest
  if: github.event.workflow_run.conclusion == 'failure' || github.event.workflow_run.conclusion == 'timed_out'
  steps:
    - uses: ravsamhq/notify-slack-action@v2
      with:
        status: ${{ github.event.workflow_run.conclusion }}
        notification_title: " ${{github.event.workflow_run.name}} - ${{github.event.workflow_run.conclusion}} on ${{github.event.workflow_run.head_branch}} - <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.event.workflow_run.id}}|View Failure>"
        message_format: ":fire: *${{github.event.workflow_run.name}}* ${{github.event.workflow_run.conclusion}} in <${{github.server_url}}/${{github.repository}}/${{github.event.workflow_run.head_branch}}|${{github.repository}}>"
        footer: "Linked Repo <${{github.server_url}}/${{github.repository}}|${{github.repository}}> | <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.event.workflow_run.id}}|View Failure>"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.MONITORING_SLACK }}

  test:
    name: Windows Installation
    runs-on: windows-latest

    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - uses: actions/checkout@v3
    - name: Run scripts to install on windows
      run: |
        Write-Host "Git branch for Run action "${Env:GIT_BRANCH}
        #
        $curDir = Get-Location
        Write-Host "Current Working Directory: $curDir"
        Get-ChildItem -Path .\windows –recurse
        .\windows\install_oqmbtk.ps1
        $MYPATH = $HOME + "\mbtk"
        Write-Host "Print USERPROFILE folder: $env:USERPROFILE"
        Write-Host "Print MYPATH folder: $MYPATH"
        $Env:PATH += ";$MYPATH"
        $Env:PATH += ";$MYPATH\Scripts"
        $Env:PYTHONUTF8=1
        $Env:PY_PIP=$MYPATH += '\Scripts'
        $Env:PY_HOME=$MYPATH
        $Env:PY_LIBS="$MYPATH\Lib;$MYPATH\Lib\site-package"
        Write-Host "MYPATH Directory: $MYPATH"
        Start-Job -ScriptBlock{& 'oq.exe' dbserver start}
        sleep 15
        oq.exe --version
        Write-Host "Print all environments variables to check"
        dir env:
        Write-Host "Print all pypip packages"
        pip freeze
        pip list
        $MBTK = $HOME + "\mbtk"
        Write-Host "MBTK Directory: $MBTK"
        Set-Location -Path $MBTK
        $curDir = Get-Location
        Write-Host "Current Working Directory: $curDir"
        Get-ChildItem -Path .\windows –recurse
        cd oq-mbtk\openquake
        pytest -vs --color=yes --durations=10 cat ghm man mbt sub wkf smt
