# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4
#
# Copyright (C) 2014-2025 GEM Foundation and G. Weatherill
#
# OpenQuake is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# OpenQuake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with OpenQuake. If not, see <http://www.gnu.org/licenses/>.
"""
Core test suite for the database and residuals construction
"""
import os
import shutil
import tempfile
import unittest
import pickle
import numpy as np
import pandas as pd

import openquake.smt.residuals.gmpe_residuals as res
import openquake.smt.residuals.residual_plotter as rspl
from openquake.smt.residuals.parsers.esm_url_flatfile_parser import ESMFlatfileParserURL

BASE_DATA_PATH = os.path.join(os.path.dirname(__file__), "data")

# Temp files for ranking metric tables 
TMP_TAB = os.path.join(tempfile.mkdtemp(), 'temp_table.csv')
TMP_FIG = os.path.join(tempfile.mkdtemp(), 'temp_figure')


class ResidualsTestCase(unittest.TestCase):
    """
    Core test case for the residuals objects
    """

    @classmethod
    def setUpClass(cls):
        """
        Setup constructs the database from the ESM test data
        """
        # Make the database
        ifile = os.path.join(BASE_DATA_PATH, "residual_tests_data.csv")
        cls.out_location = os.path.join(BASE_DATA_PATH, "residual_tests")
        if os.path.exists(cls.out_location):
            shutil.rmtree(cls.out_location)
        parser = ESMFlatfileParserURL.autobuild(
            "000", "ESM_test_subset", cls.out_location, ifile)
        del parser
        cls.database_file = os.path.join(cls.out_location,
                                         "metadatafile.pkl")
        with open(cls.database_file, "rb") as f:
            cls.database = pickle.load(f)

        # Add the GMPE list and IMTs
        cls.gmpe_list = ["KothaEtAl2020", "LanzanoEtAl2019_RJB_OMO"]
        cls.imts = ["PGA", "SA(1.0)"]

        # Compute residuals here to avoid repeating in each test
        cls.residuals = res.Residuals(cls.gmpe_list, cls.imts)
        cls.residuals.compute_residuals(cls.database, component="Geometric")
        cls.residuals.get_residual_statistics()

        # Add other params to class
        cls.toml = os.path.join(
            BASE_DATA_PATH, 'residuals_from_toml_test.toml')
        cls.exp = exp
        cls.st_rec_min = 3
        cls.exp_stations = exp_stations

    def test_residual_values(self):
        """
        Check correctness of values for computed residuals
        """
        obs = pd.DataFrame(self.residuals.residuals)
        exp = pd.DataFrame(self.exp)
        pd.testing.assert_frame_equal(obs, exp) 

    def test_residuals_execution_from_toml(self):
        """
        Tests basic execution of residuals when specifying gmpe and imts to get
        residuals for from a toml file - not correctness of values
        """
        residuals = res.Residuals.from_toml(self.toml)
        residuals.compute_residuals(self.database, component="Geometric")
        residuals.get_residual_statistics()

    def test_export_execution(self):
        """
        Tests execution of the residuals exporting function
        """
        out_loc = os.path.join(self.out_location, "residuals.txt")
        self.residuals.export_residuals(out_loc)

    def test_likelihood_execution(self):
        """
        Tests basic execution of likelihood score (Scherbaum et al.
        2004) computation- not correctness of values
        """
        self.residuals.get_likelihood_values()

    def test_llh_execution(self):
        """
        Tests basic execution of loglikelihood score (Scherbaum et al.
        2009) computation- not correctness of values
        """
        self.residuals.get_loglikelihood_values()

    def test_edr_execution(self):
        """
        Tests basic execution of EDR score (Scherbaum et al.
        2004) computation- not correctness of values
        """
        self.residuals.get_edr_values()
          
    def test_stochastic_area_execution(self):
        """
        Tests basic execution of stochastic area metric scores (Sunny
        et al. 2021) computation - not correctness of values
        """
        self.residuals.get_stochastic_area_wrt_imt()

    def test_plot_execution(self):
        """
        Tests execution of gmpe ranking metric plotting functions and
        the residual distribution information plotting function
        """
        # First compute the metrics
        self.residuals.get_loglikelihood_values()
        self.residuals.get_edr_values_wrt_imt()
        self.residuals.get_stochastic_area_wrt_imt()

        # Make the plots
        rspl.plot_residual_pdf_with_spectral_period(self.residuals, TMP_FIG)
        rspl.plot_edr_metrics_with_spectral_period(self.residuals, TMP_FIG)
        rspl.plot_loglikelihood_with_spectral_period(self.residuals, TMP_FIG)

    def test_table_execution(self):
        """
        Tests execution of table exporting functions
        """
        # First compute the metrics
        self.residuals.get_loglikelihood_values()
        self.residuals.get_edr_values_wrt_imt()
        self.residuals.get_stochastic_area_wrt_imt()
        
        # Tables of values
        rspl.pdf_table(self.residuals, TMP_TAB)
        rspl.llh_table(self.residuals, TMP_TAB)
        rspl.edr_table(self.residuals, TMP_TAB)
        rspl.stochastic_area_table(self.residuals, TMP_TAB)
        
        # Tables of weights
        rspl.llh_weights_table(self.residuals, TMP_TAB)
        rspl.edr_weights_table(self.residuals, TMP_TAB)
        rspl.stochastic_area_weights_table(self.residuals, TMP_TAB)
        
    def test_single_station_execution_and_values(self):
        """
        Test execution of single station residual analysis functions and
        correctness of values. Execution of plots is also tested here.
        """
        # Get sites with at least 3 record each
        top_sites = self.database.rank_sites_by_record_count(self.st_rec_min)
            
        # Create SingleStationAnalysis object
        ssa1 = res.SingleStationAnalysis(
            top_sites.keys(), self.gmpe_list, self.imts)
        
        # Compute total, inter-event and intra-event residuals for each site
        ssa1.get_site_residuals(self.database)

        # Get station residual statistics per GMPE and per imt
        ssa_csv_output = os.path.join(self.out_location, 'ssa_test.csv')
        ssa1.station_residual_statistics(ssa_csv_output)
        
        # Check exp vs obs delta_s2ss, delta_woes, phi_ss per station
        store = []
        for stat in ssa1.site_residuals:
            store.append(stat.site_analysis)
        obs = pd.DataFrame(store)
        exp = pd.DataFrame(self.exp_stations)
        pd.testing.assert_frame_equal(obs, exp)

        # Check num. sites, GMPEs and intensity measures + csv outputted
        self.assertTrue(len(ssa1.site_ids) == len(top_sites))
        self.assertTrue(len(ssa1.gmpe_list) == len(self.gmpe_list))
        self.assertTrue(len(ssa1.imts) == len(self.imts))
        self.assertTrue(ssa_csv_output)
        
        # Check plots executed for each GMPE and intensity measure
        for gmpe in self.gmpe_list:
            for imt in self.imts:                        
                output_all_res_plt = os.path.join(
                    self.out_location, gmpe + imt + 'AllResPerSite.jpg') 
                output_intra_res_comp_plt = os.path.join(
                    self.out_location, gmpe + imt + 'IntraResCompPerSite.jpg') 
                rspl.ResidualWithSite(
                    ssa1, gmpe, imt, output_all_res_plt, filetype='jpg')
                rspl.IntraEventResidualWithSite(ssa1, gmpe, imt,
                                                output_intra_res_comp_plt,
                                                filetype='jpg')
                # Check plots outputted
                self.assertTrue(output_all_res_plt)
                self.assertTrue(output_intra_res_comp_plt)

    def test_single_station_execution_from_toml(self):
        """
        Test execution of single station residual analysis using GMPEs and
        imts specified within a toml file. Correctness of values is not tested.
        """
        # Get sites with at least 3 record each
        top_sites = self.database.rank_sites_by_record_count(self.st_rec_min)
        
        # Create SingleStationAnalysis object from toml
        ssa1 = res.SingleStationAnalysis.from_toml(top_sites.keys(), self.toml)
        
        # Compute total, inter-event and intra-event residuals for each site
        ssa1.get_site_residuals(self.database)
                
    @classmethod
    def tearDownClass(cls):
        """
        Deletes the database
        """
        shutil.rmtree(cls.out_location)


# Expected residuals
exp = {'KothaEtAl2020': {'PGA': {'Total': np.array([-1.61510508, -2.02111996, -2.73172902, -3.09558166, -2.28423215,
       -0.21130138, -0.87469618, -0.54777616, -3.42728452, -2.75575427,
       -0.19796458, -1.41692546, -0.59645522, -0.87143131, -2.5602681 ,
       -4.62983876, -2.52903728, -2.71066089, -1.65851895, -2.43046868,
       -1.24367955, -1.4632174 ,  0.38531262, -0.84327158, -1.17983473,
       -0.74976752, -1.79743714, -1.15101302, -1.05092146, -1.6679816 ,
       -1.38562102, -0.8860387 , -1.23587682, -0.40797298, -1.42611657,
       -1.79470277, -1.31010224, -1.9276782 , -0.14229511, -1.25850108,
       -1.98765071, -1.56871653, -1.48253861, -0.79502543, -2.14829489,
       -0.93021748, -0.84557873, -0.05173951, -1.34216816, -0.46670437,
       -0.47546225, -0.87959817, -0.71508102,  0.1141988 , -0.47272301,
       -0.5962558 , -1.87262925, -1.19477639, -1.70724119, -1.74614199,
       -2.19866861, -2.83272513, -0.46836183, -1.6029711 , -1.80401182,
       -1.32092708, -1.51518649, -0.60928834, -1.6408504 , -1.45749087,
       -1.18294383, -1.01724588, -1.30070131, -1.99744727, -1.66169402,
       -1.67428859, -0.77949388, -1.47432811, -1.65279016, -1.48721835,
       -1.18509981, -1.63021193, -2.188159  , -2.83111301, -1.8677665 ,
       -1.26000434,  0.57771181,  0.67910016,  0.66862276, -2.67617857,
       -2.53473775, -2.16397058, -1.16811858, -3.06794117, -1.48117425,
       -1.05843207, -3.94234186, -2.15085245, -2.28004782, -0.61430226]), 'Inter event': np.array([-2.12222401, -1.75339657, -1.7126083 , -1.8665246 , -3.29344569,
       -1.35761213, -0.42138139, -0.58956143, -0.37465757, -0.89817631,
       -0.57515927, -0.52514368, -0.83348759, -0.69239249, -0.44275205,
       -0.61756556, -0.20386341, -0.71262804, -0.89680995, -0.65465588,
       -0.96325755, -0.07110462, -1.29799044, -1.2818354 , -1.07349934,
       -0.60905593, -0.76129163, -0.49339411, -0.23621889, -0.29794802,
       -0.93574968, -1.16038661, -2.25872375, -0.23403962, -0.80100196,
       -1.49970291, -1.64980777, -1.74639875, -1.85741175, -2.00698165,
       -0.30058397, -2.08361161, -1.33235293, -1.86880618, -2.56764797]), 'Intra event': np.array([-6.40306662e-01, -1.10903803e+00, -1.92941377e+00, -2.56224152e+00,
       -1.62556411e+00,  7.67569043e-01,  1.70067808e-03,  3.79119523e-01,
       -2.96871218e+00, -2.10465955e+00,  8.48227923e-01, -5.59023944e-01,
        3.88183056e-01,  7.07318423e-02, -1.87897693e+00, -3.44506025e+00,
       -1.01975123e+00, -1.22942996e+00, -1.47652984e-02, -2.02271205e+00,
       -6.52601447e-01, -9.06050970e-01,  1.22801860e+00, -7.30441434e-01,
       -1.02197227e+00, -6.49448261e-01, -1.55693917e+00, -9.97006915e-01,
       -9.10307655e-01, -1.44480485e+00, -1.20022426e+00, -7.67486291e-01,
       -1.07051589e+00, -3.53385999e-01, -1.23530147e+00, -1.55457066e+00,
       -1.13480992e+00, -1.66975392e+00, -1.23255951e-01, -7.04107351e-01,
       -1.54588760e+00, -1.07156091e+00, -9.72071219e-01, -1.78358955e-01,
       -1.86085199e+00, -7.22550921e-01, -6.24838161e-01,  2.91624169e-01,
       -1.11031235e+00, -9.96170386e-02, -1.09727729e-01, -7.30836201e-01,
       -5.40906353e-01,  4.16471036e-01, -4.09472442e-01, -5.16476482e-01,
       -1.62207054e+00, -7.09920921e-01, -1.30154536e+00, -7.12839860e-01,
       -1.23526757e+00, -1.96726581e+00, -4.05694789e-01, -1.38849278e+00,
       -1.21751720e+00, -6.59811105e-01, -8.84077471e-01,  1.61753358e-01,
       -9.42559102e-01, -7.30876310e-01, -4.13920420e-01, -2.22627371e-01,
       -5.49867720e-01, -1.29851696e+00, -9.10900428e-01, -9.25440464e-01,
        1.07571793e-01, -6.30550562e-01, -8.36579368e-01, -6.45431930e-01,
       -2.96645619e-01, -8.10513514e-01, -1.36836103e+00, -2.11063114e+00,
       -1.98287481e+00, -1.28123258e+00,  8.40352719e-01,  9.57402367e-01,
        9.45306541e-01, -1.88755748e+00, -1.72426851e+00, -1.72962008e+00,
       -5.79940365e-01, -2.46375326e+00, -6.31880925e-01, -1.43838425e-01,
       -3.07006926e+00, -1.00185128e+00, -1.15100325e+00,  7.72047426e-01])}, 'SA(1.0)': {'Total': np.array([-1.70943212, -1.87199507, -1.3255156 ,  1.22446041, -1.85690889,
        1.00032286, -2.31032466, -2.06154435,  0.61896374, -1.5346302 ,
        0.84100174, -0.62842605, -2.01638322, -3.32778144, -1.84215453,
       -2.12160756, -1.89285035, -1.54514635, -0.33455584, -1.24571295,
       -0.53313073, -1.37963166, -0.80983359, -0.40481559, -1.53679665,
       -0.82123847, -1.47509742, -1.36169939, -1.57492027, -0.82423834,
       -1.25108847, -0.26875826, -0.24339308, -0.90999349, -0.92998221,
       -2.3322672 , -0.02919935, -1.20109743, -1.21857397, -1.28243652,
       -0.31671665, -0.45940303, -0.92129114, -0.32407745, -0.0439603 ,
        0.81256029, -0.71022973,  0.41897344,  0.41489003, -0.71323146,
        0.29448652,  0.55432523, -0.75203336, -0.51489801, -1.6684568 ,
       -0.0351331 , -1.37425147, -1.09684951, -2.04315821, -2.47383561,
       -0.42707501, -2.18394978, -1.84547834, -0.46939392, -1.16527109,
        0.50403975, -0.19270463, -1.27736692, -0.50299441, -0.82538155,
       -1.38079489, -1.58632536, -0.56965467, -0.97171646,  0.53358091,
       -0.6017919 , -1.9573745 , -0.98662746, -1.42227509, -1.95479707,
       -0.80808457, -1.49164593, -0.99993757, -0.41393817, -0.0457051 ,
        0.66787918,  0.94216918, -2.04304767, -0.43574632, -1.58354153,
       -0.75204558, -1.45546805, -2.24975239, -0.56503766, -2.50129875,
       -1.99488366, -2.95816744, -0.92860335]), 'Inter event': np.array([-0.85578596, -0.70740852, -1.15660832, -1.06230003, -2.62457953,
       -1.04548484, -0.69067931, -0.40542366, -0.20266116, -0.76936018,
       -0.41113323, -0.73847195, -0.68170195, -0.78844585, -0.41263505,
       -0.62632727, -0.13454734, -0.12184887, -0.45556629, -0.46557316,
       -1.16759332, -0.01461795, -0.96859482, -0.68647112, -0.46122219,
        0.14823588,  0.04122841,  0.04521225, -0.37648736, -0.25777127,
       -0.83527266, -0.56417685, -1.87206028, -0.2138048 , -1.09334178,
       -0.85046664, -1.04480978, -0.74130778, -1.73071515, -0.92058246,
        0.03761685, -0.9922616 , -0.93493586, -1.42401206, -2.39555572]), 'Intra event': np.array([-1.47979342, -1.75339219, -1.12210843,  1.82358037, -1.7359649 ,
        1.5646605 , -1.99996431, -1.76711739,  1.32935984, -1.15843514,
        1.58585436, -0.11160357, -1.71494801, -2.32636403, -0.61019315,
       -0.93301253, -0.6687561 , -1.18030769,  0.21814582, -0.83440733,
       -0.0112445 , -1.19429711, -0.70104358, -0.35043418, -1.33034915,
       -0.71091637, -1.27693836, -1.1787738 , -1.36335139, -0.71351325,
       -1.08302194, -0.23265429, -0.21069656, -0.78774837, -0.80505189,
       -2.01895917, -0.02527682, -0.82733486, -0.84752346, -1.08445261,
        0.03113052, -0.13369836, -0.79752834, -0.4600957 , -0.13650914,
        0.85292884, -0.84428825,  0.46014799,  0.4554309 , -0.85005972,
        0.31403891,  0.61420016, -0.65100801, -0.44572854, -1.44432257,
        0.28568649, -1.26124022, -0.18442228, -1.27758195, -1.77509314,
       -0.36970335, -1.89056615, -1.64002793, -0.05039868, -0.85426412,
        1.07409529,  0.38161952, -0.87136386,  0.02317806, -0.34923806,
       -0.99084208, -1.40378697, -0.22934634, -0.69380126,  1.04509259,
        0.30571789, -1.260228  , -0.13883758, -0.64209029, -1.25725061,
       -0.40109935, -1.19073777, -1.1768652 , -0.49992868, -0.07455213,
        0.74976827,  1.0666234 , -1.78625458,  0.07047254, -1.28859322,
       -0.32806328, -0.85780508, -1.7753488 ,  0.17080492, -1.50407309,
       -0.91907102, -2.03184001,  0.31267781])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'Total': np.array([-1.16977136, -1.91259084, -2.61653112, -2.65417638, -2.05960903,
       -0.31677283, -0.76626617, -0.50482539, -3.51826576, -2.73406358,
       -0.25343369, -1.38844988, -0.52961074, -0.81863366, -2.55337718,
       -4.88819569, -2.72550432, -2.7725423 , -1.76057424, -1.91250526,
       -0.92535945, -1.18028332,  0.77609818, -0.7771562 , -1.1024447 ,
       -0.68565753, -1.96944295, -1.24300849, -1.01221367, -1.6583131 ,
       -1.43780519, -0.87436523, -1.30884178, -0.3265666 , -1.38192454,
       -1.88178283, -0.86201578, -1.93720301,  0.07673321, -1.20659623,
       -2.13200631, -1.41583426, -1.56428589, -0.31312786, -1.50521665,
       -0.38769389, -0.66420723,  0.10583982, -0.79566789, -0.17472928,
       -0.30866627, -0.1693207 , -0.36187571,  0.46563004, -0.34541865,
       -0.4710717 , -1.74588648, -0.6340983 , -1.65700255, -1.72098655,
       -1.80838761, -3.05117668, -0.06845502, -1.68437193, -1.69040385,
       -0.57760611, -1.07049155, -0.50891493, -1.56237827, -1.17021691,
       -0.29675208, -0.37497604, -1.21940234, -1.91075058, -0.96709775,
       -1.25102149, -0.70421269, -1.42118872, -1.43619908, -0.69065257,
       -0.60749245, -1.63467285, -1.61029559, -3.15461489, -1.46872978,
       -1.29415805,  1.12421569,  0.95268463,  1.11154493, -2.71199061,
       -2.94977626, -1.70299963, -1.20810738, -3.04754602, -1.02514279,
       -0.78029463, -4.06738958, -2.03858114, -2.04487684, -0.59460149]), 'Inter event': np.array([-1.84835151, -1.57101889, -1.63239835, -1.84966798, -3.42433125,
       -0.9139722 , -0.36058348, -0.51151023, -0.31813009, -0.91377845,
       -0.57672875, -0.469645  , -0.769421  , -0.66711016, -0.40568634,
       -0.60727396, -0.15151976, -0.64118276, -0.87310607, -0.39995646,
       -0.89881982,  0.03560253, -1.27463961, -1.06811614, -0.6983876 ,
       -0.30684095, -0.41484525, -0.02126548, -0.1602667 , -0.21856696,
       -0.81005313, -0.87471565, -2.13430404, -0.03176163, -0.78151173,
       -1.0846322 , -1.15270771, -1.36250312, -1.44351444, -1.81918739,
        0.10609265, -2.16159673, -1.11142679, -1.57399319, -2.46544552]), 'Intra event': np.array([-0.35240489, -1.19094672, -1.98559925, -2.17335356, -1.50216815,
        0.46525611, -0.04216054,  0.25297043, -3.11664397, -2.11758783,
        0.68270482, -0.59857357,  0.37093862,  0.04467118, -1.91361754,
       -3.72455083, -1.28316737, -1.33626684, -0.19389298, -1.68024809,
       -0.56589517, -0.85366944,  1.35481833, -0.68844123, -0.97659696,
       -0.60738743, -1.74462445, -1.10111491, -0.8966661 , -1.46901111,
       -1.27367492, -0.77455351, -1.15943312, -0.28928793, -1.22417323,
       -1.66697103, -0.76361379, -1.71606481,  0.06797386, -0.69446707,
       -1.73912878, -1.03883864, -1.20642028,  0.20596642, -1.33339114,
       -0.27694003, -0.58908587,  0.28019218, -0.68091781,  0.02003715,
       -0.13115943, -0.18000179, -0.39737012,  0.53677096, -0.30598796,
       -0.41729729, -1.5465877 , -0.2576624 , -1.41238172, -0.82487884,
       -0.92354271, -2.32648199, -0.06064065, -1.49209524, -1.34013966,
       -0.08394286, -0.64034326, -0.00639988, -1.15996048, -0.7172638 ,
        0.2687588 ,  0.18045462, -0.77278745, -1.44334116, -0.37808588,
       -0.69859704, -0.08132451, -0.84826148, -0.86520613, -0.02358585,
        0.07029058, -1.08925594, -0.86497187, -2.60829763, -1.71356344,
       -1.51649578,  1.21351818,  1.01988301,  1.19921461, -1.92929217,
       -2.19771972, -1.34032442, -0.7816586 , -2.61585636, -0.33283908,
       -0.05643892, -3.30020638, -1.00995849, -1.01706548,  0.6200975 ])}, 'SA(1.0)': {'Total': np.array([-1.74458012e+00, -1.31208540e+00, -1.33720209e+00,  4.37104233e-01,
       -2.38973638e+00,  7.68721279e-01, -2.42286160e+00, -2.11819666e+00,
       -3.17395368e-01, -1.98858031e+00,  5.03935894e-01, -1.11480161e+00,
       -1.96600765e+00, -3.63016258e+00, -2.56330605e+00, -2.26091005e+00,
       -2.60022633e+00, -8.33199023e-01, -1.35276990e-01, -1.12123007e+00,
       -1.02103382e+00, -1.90866245e+00, -1.32321770e+00, -8.92176081e-01,
       -2.24844038e+00, -1.39835473e+00, -2.15444043e+00, -1.92087960e+00,
       -2.30441925e+00, -1.38379367e+00, -1.91260078e+00, -7.05705986e-01,
       -7.44967750e-01, -1.59849468e+00, -9.40242502e-01, -3.31128872e+00,
       -4.04243477e-01, -2.00335110e+00, -1.61796448e+00, -1.75190947e+00,
       -1.00064475e+00, -1.04858050e-01, -2.87351071e-01, -7.27830892e-04,
       -3.32061283e-01,  4.99791508e-01, -4.20358260e-01,  2.65185202e-01,
        5.86829324e-02, -3.49672723e-01,  1.92285310e-01,  2.95267020e-01,
       -1.16664418e+00, -9.59189213e-01, -2.02558196e+00,  4.63977856e-01,
       -1.74980078e+00, -1.89312086e+00, -1.91553335e+00, -3.02522648e+00,
       -6.58890574e-01, -2.94695449e+00, -2.36302486e+00,  2.86761176e-01,
       -9.21014558e-01,  3.36279896e-04, -7.36405970e-01, -1.59860580e+00,
        3.37259621e-01, -4.35793450e-01, -1.68519313e+00, -2.05510571e+00,
        1.67778001e-01, -6.91760703e-01,  3.66938697e-02, -1.25601948e+00,
       -2.44667884e+00, -2.73558044e-01, -1.18581760e+00, -2.40157552e+00,
       -1.82590143e-01, -1.82949112e+00, -1.14445797e+00, -9.01081634e-01,
       -2.25523579e-01,  9.22024100e-02,  7.90916586e-01, -2.81701502e+00,
       -9.41937122e-01, -1.73266352e+00, -1.36032515e+00, -1.46419909e+00,
       -2.23942167e+00, -3.82751046e-01, -2.69660133e+00, -2.07988316e+00,
       -2.82271543e+00, -1.48600588e+00]), 'Inter event': np.array([-0.80815554, -0.95551197, -1.12236119, -1.56451183, -3.11534943,
       -0.87665202, -0.88416468, -0.61296452, -0.41328973, -1.04156268,
       -0.64777083, -0.99801834, -0.88982413, -1.06749421, -0.6410256 ,
       -0.88598907, -0.32690972, -0.34509726, -0.74048323, -0.43555591,
       -1.53391425, -0.18726088, -1.38115034, -0.92616941, -0.13311189,
        0.05413027, -0.03127522,  0.04469074, -0.54043374, -0.44433274,
       -0.93832623, -0.49040597, -2.21505707, -0.30522305, -1.36514085,
       -0.84458209, -1.0266894 , -0.71648398, -1.88541185, -0.767397  ,
       -0.34597669, -1.43364419, -1.17964929, -1.3245105 , -2.56034392]), 'Intra event': np.array([-1.54610621, -0.98106831, -1.00940924,  0.99266508, -2.19705753,
        1.36685186, -2.14722232, -1.57233369,  0.45963676, -1.42607846,
        1.38640245, -0.44013266, -1.40060815, -2.46776227, -1.26395319,
       -0.92273856, -1.30561294, -0.48192761,  0.30558679, -0.80693325,
       -0.69387479, -1.69152155, -1.17268052, -0.79067677, -1.99264431,
       -1.2392695 , -1.90933835, -1.70234881, -2.04225469, -1.226365  ,
       -1.69501184, -0.62542064, -0.66021575, -1.41664033, -0.83327487,
       -2.93457664, -0.35825431, -1.53858913, -1.10373036, -1.49269013,
       -0.64498544,  0.36579354, -0.25466029, -0.02911536, -0.40298214,
        0.53565573, -0.45797204,  0.31557475,  0.08256375, -0.41792029,
        0.19360899,  0.30981048, -1.03391973, -0.85006609, -1.7951396 ,
        0.77987582, -1.71808595, -0.97832243, -1.00361201, -2.25575663,
       -0.58393123, -2.61169126, -2.2249005 ,  0.76503899, -0.59777911,
        0.44184569, -0.29428411, -1.26716467,  0.91720811,  0.04491809,
       -1.36486722, -1.94441109,  0.56382456, -0.40605326,  0.41591314,
       -0.43174304, -1.77524754,  0.67683713, -0.35252933, -1.72435429,
        0.19509203, -1.66322189, -1.11052891, -0.83591031, -0.07363076,
        0.28488177,  1.07329   , -2.42926449, -0.31348253, -1.33847869,
       -0.91834318, -0.95983194, -1.83456997,  0.26044176, -1.70446308,
       -1.0085767 , -1.84676647, -0.33846329])}}}

exp_stations = [{'KothaEtAl2020': {'PGA': {'events': 24, 'Total': np.array([-1.17983473, -0.74976752, -1.79743714, -1.15101302, -1.05092146,
       -1.6679816 , -1.38562102, -0.8860387 , -1.23587682, -0.40797298,
       -1.42611657, -1.79470277, -1.9276782 , -0.14229511, -1.25850108,
       -0.05173951, -0.47546225,  0.1141988 , -0.47272301, -0.5962558 ,
       -1.6029711 , -1.26000434, -2.67617857, -0.61430226]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639, 0.88405639]), 'Intra event': np.array([-0.7825949 , -0.49732748, -1.19225609, -0.7634772 , -0.69708558,
       -1.10638707, -0.91909478, -0.58771737, -0.81976811, -0.27061212,
       -0.94595584, -1.19044235, -1.27864614, -0.09438561, -0.83477499,
       -0.03431928, -0.31537835,  0.07574908, -0.31356139, -0.39550179,
       -1.06326502, -0.83577211, -1.77513312, -0.40747217]), 'Inter event': np.array([-0.26044553, -0.16550928, -0.3967797 , -0.25408321, -0.23198825,
       -0.36820272, -0.30587234, -0.1955908 , -0.27281668, -0.090059  ,
       -0.31481163, -0.3961761 , -0.42553009, -0.03141128, -0.27781093,
       -0.01142137, -0.10495709,  0.0252091 , -0.10435241, -0.13162196,
       -0.35385182, -0.27814277, -0.59075965, -0.13560567]), 'dS2ss': -0.7102158238460881, 'dWo,es': np.array([-0.07237907,  0.21288834, -0.48204026, -0.05326138,  0.01313025,
       -0.39617124, -0.20887896,  0.12249845, -0.10955229,  0.43960371,
       -0.23574001, -0.48022653, -0.56843032,  0.61583021, -0.12455916,
        0.67589655,  0.39483747,  0.78596491,  0.39665443,  0.31471403,
       -0.3530492 , -0.12555629, -1.06491729,  0.30274366]), 'phi_ss,s': 0.44545057402931865, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149, 0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921, 0.76576921])}, 'SA(1.0)': {'events': 24, 'Total': np.array([-0.80983359, -0.40481559, -1.53679665, -0.82123847, -1.47509742,
       -1.36169939, -1.57492027, -0.82423834, -1.25108847, -0.26875826,
       -0.24339308, -0.90999349, -2.3322672 , -0.02919935, -1.20109743,
        0.81256029,  0.41489003,  0.55432523, -0.75203336, -0.51489801,
       -2.18394978, -0.41393817, -2.04304767, -0.92860335]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634]), 'Intra event': np.array([-0.53833041, -0.26909792, -1.02157329, -0.54591171, -0.98055922,
       -0.90517878, -1.04691566, -0.54790585, -0.83165106, -0.17865491,
       -0.1617936 , -0.60491089, -1.55035597, -0.01941004, -0.79841991,
        0.54014296,  0.27579483,  0.36848327, -0.49990816, -0.34227433,
       -1.45176315, -0.27516209, -1.3580996 , -0.61728165]), 'Inter event': np.array([-0.18004333, -0.08999916, -0.34166277, -0.18257888, -0.32794571,
       -0.3027349 , -0.35013847, -0.18324582, -0.27814373, -0.05975071,
       -0.05411149, -0.20231102, -0.51851289, -0.00649164, -0.26702965,
        0.18064954,  0.09223893,  0.12323836, -0.1671931 , -0.11447284,
       -0.48553876, -0.09202731, -0.4542132 , -0.20644839]), 'dS2ss': -0.5566973813571795, 'dWo,es': np.array([ 0.01836698,  0.28759946, -0.4648759 ,  0.01078568, -0.42386183,
       -0.3484814 , -0.49021828,  0.00879153, -0.27495368,  0.37804247,
        0.39490378, -0.04821351, -0.99365859,  0.53728735, -0.24172253,
        1.09684034,  0.83249221,  0.92518065,  0.05678922,  0.21442305,
       -0.89506577,  0.28153529, -0.80140222, -0.06058427]), 'phi_ss,s': 0.5469124601682392, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863, 0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 24, 'Total': np.array([-1.1024447 , -0.68565753, -1.96944295, -1.24300849, -1.01221367,
       -1.6583131 , -1.43780519, -0.87436523, -1.30884178, -0.3265666 ,
       -1.38192454, -1.88178283, -1.93720301,  0.07673321, -1.20659623,
        0.10583982, -0.30866627,  0.46563004, -0.34541865, -0.4710717 ,
       -1.68437193, -1.29415805, -2.71199061, -0.59460149]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111, 0.77412111]), 'Intra event': np.array([-0.6697039 , -0.4165175 , -1.19638074, -0.75509241, -0.6148911 ,
       -1.00737818, -0.87342588, -0.53115208, -0.79508427, -0.19837995,
       -0.83947997, -1.14312971, -1.17679589,  0.04661325, -0.73297299,
        0.06429469, -0.187506  ,  0.28285705, -0.20983204, -0.2861627 ,
       -1.02320818, -0.78616431, -1.64745739, -0.36120355]), 'Inter event': np.array([-0.18372182, -0.11426446, -0.32820661, -0.2071467 , -0.16868486,
       -0.27635699, -0.23960946, -0.1457125 , -0.21811778, -0.05442215,
       -0.23029698, -0.3135981 , -0.32283384,  0.01278755, -0.20107861,
        0.01763815, -0.05143907,  0.077597  , -0.05756383, -0.07850385,
       -0.28069968, -0.21567074, -0.45195178, -0.09909002]), 'dS2ss': -0.6274230741366091, 'dWo,es': np.array([-0.04228082,  0.21090557, -0.56895767, -0.12766933,  0.01253197,
       -0.37995511, -0.24600281,  0.09627099, -0.16766119,  0.42904312,
       -0.2120569 , -0.51570664, -0.54937282,  0.67403632, -0.10554992,
        0.69171776,  0.43991707,  0.91028012,  0.41759104,  0.34126037,
       -0.39578511, -0.15874124, -1.02003432,  0.26621953]), 'phi_ss,s': 0.46511402621237874, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526, 0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259, 0.68575259])}, 'SA(1.0)': {'events': 24, 'Total': np.array([-1.3232177 , -0.89217608, -2.24844038, -1.39835473, -2.15444043,
       -1.9208796 , -2.30441925, -1.38379367, -1.91260078, -0.70570599,
       -0.74496775, -1.59849468, -3.31128872, -0.40424348, -2.0033511 ,
        0.49979151,  0.05868293,  0.29526702, -1.16664418, -0.95918921,
       -2.94695449, -0.90108163, -2.81701502, -1.48600588]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834, 0.74499834]), 'Intra event': np.array([-0.77425393, -0.52203869, -1.31562917, -0.81821883, -1.26062701,
       -1.12396364, -1.34838407, -0.80969873, -1.11911946, -0.41292951,
       -0.43590273, -0.93532666, -1.93753326, -0.23653485, -1.17222016,
        0.29244284,  0.03433712,  0.17276949, -0.68263812, -0.56125006,
       -1.7243505 , -0.5272496 , -1.64831906, -0.86950612]), 'Inter event': np.array([-0.21154106, -0.14263101, -0.35945518, -0.22355312, -0.34442753,
       -0.30708847, -0.36840445, -0.22122526, -0.30576495, -0.11282028,
       -0.11909701, -0.25554922, -0.52937134, -0.06462587, -0.32027308,
        0.07990101,  0.00938156,  0.04720395, -0.18650986, -0.15334431,
       -0.47112571, -0.14405473, -0.45035246, -0.23756579]), 'dS2ss': -0.8223393625465345, 'dWo,es': np.array([ 0.04808543,  0.30030067, -0.49328981,  0.00412053, -0.43828765,
       -0.30162428, -0.52604471,  0.01264063, -0.29678009,  0.40940985,
        0.38643663, -0.11298729, -1.1151939 ,  0.58580451, -0.3498808 ,
        1.1147822 ,  0.85667649,  0.99510886,  0.13970124,  0.2610893 ,
       -0.90201114,  0.29508977, -0.8259797 , -0.04716676]), 'phi_ss,s': 0.5771957943661847, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143, 0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286, 0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 12, 'Total': np.array([-1.61510508, -0.79502543, -0.93021748, -1.34216816, -0.87959817,
       -1.19477639, -2.19866861, -1.51518649, -1.01724588, -1.67428859,
       -1.18509981, -1.48117425]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639]), 'Intra event': np.array([-1.0713136 , -0.52734746, -0.61702155, -0.89027211, -0.58344531,
       -0.79250583, -1.4583965 , -1.00503671, -0.67474827, -1.11057055,
       -0.78608728, -0.98247609]), 'Inter event': np.array([-0.35653036, -0.17549985, -0.20534316, -0.29628023, -0.19416907,
       -0.26374387, -0.48535054, -0.33447359, -0.22455446, -0.36959497,
       -0.26160779, -0.32696547]), 'dS2ss': -0.8749351042458295, 'dWo,es': np.array([-0.1963785 ,  0.34758765,  0.25791356, -0.01533701,  0.2914898 ,
        0.08242927, -0.58346139, -0.13010161,  0.20018684, -0.23563545,
        0.08884783, -0.10754098]), 'phi_ss,s': 0.2680414928851073, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921])}, 'SA(1.0)': {'events': 11, 'Total': np.array([-0.45940303, -0.32407745, -0.71022973, -0.71323146, -0.0351331 ,
       -2.04315821, -1.16527109, -0.82538155, -0.97171646, -1.42227509,
       -2.24975239]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634]), 'Intra event': np.array([-0.30538449, -0.2154279 , -0.47211953, -0.47411491, -0.02335445,
       -1.35817309, -0.77460464, -0.54866579, -0.64594075, -0.94544599,
       -1.49550492]), 'Inter event': np.array([        np.nan, -0.10213512, -0.07204935, -0.15789926, -0.15856661,
       -0.00781084, -0.45423778, -0.25906469, -0.18349998, -0.21603336,
       -0.31620218, -0.50016809]), 'dS2ss': -0.6598851318116575, 'dWo,es': np.array([ 0.35450064,  0.44445724,  0.1877656 ,  0.18577022,  0.63653069,
       -0.69828795, -0.11471951,  0.11121935,  0.01394438, -0.28556086,
       -0.83561979]), 'phi_ss,s': 0.4573059148135689, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 12, 'Total': np.array([-1.16977136, -0.31312786, -0.38769389, -0.79566789, -0.1693207 ,
       -0.6340983 , -1.80838761, -1.07049155, -0.37497604, -1.25102149,
       -0.60749245, -1.02514279]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111]), 'Intra event': np.array([-0.71060293, -0.1902163 , -0.23551304, -0.48334568, -0.10285752,
       -0.38519674, -1.09854419, -0.65029326, -0.22778731, -0.75996008,
       -0.36903444, -0.62274517]), 'Inter event': np.array([-0.19494177, -0.05218259, -0.06460898, -0.13259763, -0.0282172 ,
       -0.10567214, -0.30136682, -0.17839684, -0.06248956, -0.20848206,
       -0.10123829, -0.1708395 ]), 'dS2ss': -0.4863413890856495, 'dWo,es': np.array([-0.22426154,  0.29612509,  0.25082834,  0.00299571,  0.38348387,
        0.10114465, -0.6122028 , -0.16395187,  0.25855408, -0.27361869,
        0.11730695, -0.13640379]), 'phi_ss,s': 0.2913844786083945, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259])}, 'SA(1.0)': {'events': 11, 'Total': np.array([-1.04858050e-01, -7.27830892e-04, -4.20358260e-01, -3.49672723e-01,
        4.63977856e-01, -1.91553335e+00, -9.21014558e-01, -4.35793450e-01,
       -6.91760703e-01, -1.18581760e+00, -2.23942167e+00]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834]), 'Intra event': np.array([-6.13555561e-02, -4.25875447e-04, -2.45964088e-01, -2.04603883e-01,
        2.71487208e-01, -1.12083539e+00, -5.38912941e-01, -2.54995676e-01,
       -4.04769709e-01, -6.93857058e-01, -1.31035205e+00]), 'Inter event': np.array([            np.nan, -1.67635175e-02, -1.16357359e-04, -6.72021175e-02,
       -5.59017144e-02,  7.41755245e-02, -3.06233776e-01, -1.47241376e-01,
       -6.96697208e-02, -1.10590866e-01, -1.89575087e-01, -3.58013372e-01]), 'dS2ss': -0.41496227467599944, 'dWo,es': np.array([ 0.35360672,  0.4145364 ,  0.16899819,  0.21035839,  0.68644948,
       -0.70587312, -0.12395067,  0.1599666 ,  0.01019257, -0.27889478,
       -0.89538978]), 'phi_ss,s': 0.4753652331122528, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 8, 'Total': np.array([-1.98765071, -0.84557873, -0.46670437, -0.71508102, -1.70724119,
       -2.83272513, -1.30070131, -1.63021193]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639]), 'Intra event': np.array([-1.31842645, -0.56087991, -0.30956917, -0.47431962, -1.1324283 ,
       -1.87897184, -0.86276678, -1.08133411]), 'Inter event': np.array([-0.43876887, -0.18665937, -0.10302381, -0.15785233, -0.37686917,
       -0.62531691, -0.28712653, -0.35986516]), 'dS2ss': -0.9523370241982548, 'dWo,es': np.array([-0.36608942,  0.39145711,  0.64276785,  0.4780174 , -0.18009128,
       -0.92663482,  0.08957024, -0.12899709]), 'phi_ss,s': 0.5133446784874587, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921])}, 'SA(1.0)': {'events': 8, 'Total': np.array([-1.21857397, -0.0439603 ,  0.41897344,  0.29448652, -1.37425147,
       -2.47383561, -1.38079489, -1.95479707]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634, 0.8870634]), 'Intra event': np.array([-0.8100373 , -0.02922226,  0.27850925,  0.19575756, -0.91352268,
       -1.64446244, -0.91787236, -1.29943573]), 'Inter event': np.array([-0.27091506, -0.00977332,  0.09314676,  0.06547065, -0.3055255 ,
       -0.54998658, -0.30698024, -0.43459321]), 'dS2ss': -0.6425357453360376, 'dWo,es': np.array([-0.16750156,  0.61331349,  0.92104499,  0.83829331, -0.27098693,
       -1.0019267 , -0.27533662, -0.65689998]), 'phi_ss,s': 0.7111247238969028, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 8, 'Total': np.array([-2.13200631, -0.66420723, -0.17472928, -0.36187571, -1.65700255,
       -3.05117668, -1.21940234, -1.63467285]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111]), 'Intra event': np.array([-1.29513338, -0.40348706, -0.10614308, -0.21982923, -1.00658206,
       -1.85350331, -0.74075235, -0.9930174 ]), 'Inter event': np.array([-0.35529771, -0.11068978, -0.02911854, -0.06030639, -0.27613859,
       -0.50847696, -0.20321275, -0.27241735]), 'dS2ss': -0.827305984942673, 'dWo,es': np.array([-0.46782739,  0.42381893,  0.7211629 ,  0.60747675, -0.17927608,
       -1.02619733,  0.08655364, -0.16571142]), 'phi_ss,s': 0.5864860937481507, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259])}, 'SA(1.0)': {'events': 8, 'Total': np.array([-1.61796448, -0.33206128,  0.2651852 ,  0.19228531, -1.74980078,
       -3.02522648, -1.68519313, -2.40157552]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834]), 'Intra event': np.array([-0.94671901, -0.19429891,  0.15516773,  0.11251184, -1.02386035,
       -1.77014976, -0.98605649, -1.40523308]), 'Inter event': np.array([-0.25866184, -0.0530862 ,  0.04239481,  0.0307404 , -0.27973833,
       -0.48363894, -0.26940959, -0.38393669]), 'dS2ss': -0.757329753821387, 'dWo,es': np.array([-0.18938926,  0.56303085,  0.91249748,  0.86984159, -0.26653059,
       -1.01282   , -0.22872674, -0.64790333]), 'phi_ss,s': 0.7082257144420018, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 8, 'Total': np.array([-2.28423215, -3.42728452, -2.75575427, -4.62983876, -1.8677665 ,
       -2.16397058, -3.06794117, -3.94234186]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639, 0.88405639]), 'Intra event': np.array([-1.51515156, -2.27334839, -1.82791638, -3.07101334, -1.23890617,
       -1.43538099, -2.03499274, -2.61499051]), 'Inter event': np.array([-0.50423847, -0.75656439, -0.60832579, -1.0220252 , -0.41230473,
       -0.47769103, -0.67724025, -0.87026199]), 'dS2ss': -2.001462509556499, 'dWo,es': np.array([ 0.48631095, -0.27188588,  0.17354613, -1.06955083,  0.76255634,
        0.56608152, -0.03353023, -0.613528  ]), 'phi_ss,s': 0.6283719162864907, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149, 0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921, 0.76576921])}, 'SA(1.0)': {'events': 8, 'Total': np.array([-1.3255156 , -2.31032466, -2.06154435, -3.32778144, -0.99993757,
       -1.58354153, -1.45546805, -2.50129875]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634, 0.8870634]), 'Intra event': np.array([-0.8811259 , -1.53576985, -1.37039513, -2.21211611, -0.66470051,
       -1.05264657, -0.96751075, -1.66271834]), 'Inter event': np.array([-0.29469048, -0.5136346 , -0.45832541, -0.73983701, -0.22230751,
       -0.35205516, -0.32358169, -0.55609222]), 'dS2ss': -1.2933728934065252, 'dWo,es': np.array([ 0.412247  , -0.24239695, -0.07702223, -0.91874322,  0.62867239,
        0.24072632,  0.32586214, -0.36934545]), 'phi_ss,s': 0.5034886462133452, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863, 0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 8, 'Total': np.array([-2.05960903, -3.51826576, -2.73406358, -4.88819569, -1.46872978,
       -1.70299963, -3.04754602, -4.06738958]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111, 0.77412111]), 'Intra event': np.array([-1.25115408, -2.13724669, -1.6608661 , -2.96944027, -0.89221169,
       -1.03452398, -1.85129779, -2.47082383]), 'Inter event': np.array([-0.34323274, -0.5863171 , -0.45563023, -0.81461519, -0.24476303,
       -0.28380397, -0.50787191, -0.67782829]), 'dS2ss': -1.7834455532155655, 'dWo,es': np.array([ 0.53229147, -0.35380113,  0.12257946, -1.18599472,  0.89123386,
        0.74892157, -0.06785224, -0.68737828]), 'phi_ss,s': 0.7233249402512945, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526, 0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259, 0.68575259])}, 'SA(1.0)': {'events': 8, 'Total': np.array([-1.33720209, -2.4228616 , -2.11819666, -3.63016258, -1.14445797,
       -1.73266352, -1.46419909, -2.69660133]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834, 0.74499834]), 'Intra event': np.array([-0.78243661, -1.4176882 , -1.2394197 , -2.12411582, -0.66965631,
       -1.01383282, -0.85674632, -1.57786143]), 'Inter event': np.array([-0.21377672, -0.38733967, -0.33863329, -0.58034928, -0.18296298,
       -0.27699862, -0.23407957, -0.43110208]), 'dS2ss': -1.2102196524131221, 'dWo,es': np.array([ 0.42778304, -0.20746854, -0.02920005, -0.91389616,  0.54056334,
        0.19638683,  0.35347333, -0.36764178]), 'phi_ss,s': 0.4859424944630082, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143, 0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286, 0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 7, 'Total': np.array([-1.87262925, -0.46836183, -1.80401182, -1.45749087, -1.99744727,
       -1.65279016, -2.83111301]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639, 0.88405639]), 'Intra event': np.array([-1.24213168, -0.31066858, -1.19661713, -0.96676669, -1.32492459,
       -1.09631046, -1.87790251]), 'Inter event': np.array([-0.41337817, -0.10338969, -0.39823105, -0.32173742, -0.44093143,
       -0.36484925, -0.62496104]), 'dS2ss': -1.145045947125461, 'dWo,es': np.array([-0.09708573,  0.83437737, -0.05157118,  0.17827926, -0.17987864,
        0.04873549, -0.73285656]), 'phi_ss,s': 0.46759393467374616, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149, 0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921, 0.76576921])}, 'SA(1.0)': {'events': 7, 'Total': np.array([-1.6684568 , -0.42707501, -1.84547834, -1.27736692, -1.58632536,
       -1.9573745 , -1.49164593]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634,
       0.8870634]), 'Intra event': np.array([-1.10909332, -0.2838947 , -1.22676697, -0.84911945, -1.0544971 ,
       -1.30114905, -0.9915597 ]), 'Inter event': np.array([-0.37093364, -0.09494791, -0.41028932, -0.28398599, -0.35267406,
       -0.43516623, -0.3316248 ]), 'dS2ss': -0.973725754784097, 'dWo,es': np.array([-0.13536756,  0.68983106, -0.25304122,  0.12460631, -0.08077134,
       -0.32742329, -0.01783395]), 'phi_ss,s': 0.338574443826079, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869,
       0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863, 0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 7, 'Total': np.array([-1.74588648, -0.06845502, -1.69040385, -1.17021691, -1.91075058,
       -1.43619908, -3.15461489]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111, 0.77412111]), 'Intra event': np.array([-1.06057653, -0.04158448, -1.0268724 , -0.71087359, -1.1607268 ,
       -0.87245021, -1.91633909]), 'Inter event': np.array([-0.29095104, -0.01140799, -0.28170489, -0.19501602, -0.31842556,
       -0.2393418 , -0.52571488]), 'dS2ss': -0.9699175860589793, 'dWo,es': np.array([-0.09065894,  0.9283331 , -0.05695482,  0.259044  , -0.19080921,
        0.09746737, -0.94642151]), 'phi_ss,s': 0.560058144351836, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526, 0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259, 0.68575259])}, 'SA(1.0)': {'events': 7, 'Total': np.array([-2.02558196, -0.65889057, -2.36302486, -1.5986058 , -2.05510571,
       -2.44667884, -1.82949112]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834, 0.74499834]), 'Intra event': np.array([-1.1852281 , -0.38553642, -1.38267594, -0.93539168, -1.20250332,
       -1.43162437, -1.07048953]), 'Inter event': np.array([-0.3238271 , -0.10533596, -0.37777365, -0.25556699, -0.32854702,
       -0.3911473 , -0.29247832]), 'dS2ss': -1.084778480380285, 'dWo,es': np.array([-0.10044962,  0.69924206, -0.29789746,  0.1493868 , -0.11772484,
       -0.34684589,  0.01428895]), 'phi_ss,s': 0.35224382740023535, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143, 0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286, 0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 6, 'Total': np.array([-2.14829489, -1.32092708, -1.18294383, -1.66169402, -1.48721835,
       -2.188159  ]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639]), 'Intra event': np.array([-1.42498316, -0.87618271, -0.78465719, -1.10221646, -0.98648519,
       -1.45142538]), 'Inter event': np.array([-0.47423066, -0.29159131, -0.26113186, -0.36681475, -0.32829969,
       -0.48303057]), 'dS2ss': -1.1043250154016946, 'dWo,es': np.array([-0.32065815,  0.22814231,  0.31966782,  0.00210855,  0.11783982,
       -0.34710036]), 'phi_ss,s': 0.2797954281610753, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921])}, 'SA(1.0)': {'events': 6, 'Total': np.array([-0.92129114, -0.46939392, -0.50299441, -0.56965467, -0.98662746,
       -0.80808457]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634]), 'Intra event': np.array([-0.61242092, -0.31202585, -0.33436151, -0.37867339, -0.65585271,
       -0.53716776]), 'Inter event': np.array([-0.20482273, -0.10435631, -0.11182642, -0.12664642, -0.21934839,
       -0.17965449]), 'dS2ss': -0.471750357804446, 'dWo,es': np.array([-0.14067056,  0.1597245 ,  0.13738885,  0.09307697, -0.18410236,
       -0.0654174 ]), 'phi_ss,s': 0.14900486870810548, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 6, 'Total': np.array([-1.50521665, -0.57760611, -0.29675208, -0.96709775, -0.69065257,
       -1.61029559]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111]), 'Intra event': np.array([-0.91437643, -0.35087933, -0.18026847, -0.58748446, -0.41955185,
       -0.97820891]), 'Inter event': np.array([-0.25084355, -0.09625775, -0.04945357, -0.16116632, -0.11509688,
       -0.2683549 ]), 'dS2ss': -0.5717949099041038, 'dWo,es': np.array([-0.34258152,  0.22091558,  0.39152644, -0.01568955,  0.15224306,
       -0.406414  ]), 'phi_ss,s': 0.318764864401233, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259])}, 'SA(1.0)': {'events': 6, 'Total': np.array([-0.28735107,  0.28676118,  0.33725962,  0.167778  , -0.27355804,
       -0.18259014]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834]), 'Intra event': np.array([-0.16813764,  0.16779247,  0.19734061,  0.09817189, -0.16006693,
       -0.10683891]), 'Inter event': np.array([-0.04593843,  0.04584413,  0.05391725,  0.02682245, -0.04373336,
       -0.02919044]), 'dS2ss': 0.004710248945977824, 'dWo,es': np.array([-0.17284789,  0.16308222,  0.19263036,  0.09346164, -0.16477718,
       -0.11154916]), 'phi_ss,s': 0.16846867265367862, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 6, 'Total': np.array([-1.48253861, -1.74614199, -0.60928834, -1.6408504 , -0.77949388,
       -1.47432811]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639, 0.88405639,
       0.88405639]), 'Intra event': np.array([-0.98338108, -1.15823155, -0.40414639, -1.0883907 , -0.51704524,
       -0.97793498]), 'Inter event': np.array([-0.32726665, -0.38545643, -0.13449886, -0.36221358, -0.1720713 ,
       -0.3254542 ]), 'dS2ss': -0.8548549909951941, 'dWo,es': np.array([-0.12852609, -0.30337656,  0.4507086 , -0.23353571,  0.33780975,
       -0.12307999]), 'phi_ss,s': 0.314800755663506, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149, 0.44176149,
       0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921, 0.76576921,
       0.76576921])}, 'SA(1.0)': {'events': 6, 'Total': np.array([-0.31671665, -1.09684951,  0.50403975, -0.19270463,  0.53358091,
       -0.6017919 ]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634, 0.8870634]), 'Intra event': np.array([-0.21053486, -0.72912194,  0.33505639, -0.12809886,  0.35469364,
       -0.40003635]), 'Inter event': np.array([-0.07041289, -0.24385311,  0.11205882, -0.04284236,  0.11862645,
       -0.13379121]), 'dS2ss': -0.1296736640610126, 'dWo,es': np.array([-0.0808612 , -0.59944828,  0.46473006,  0.0015748 ,  0.48436731,
       -0.27036269]), 'phi_ss,s': 0.42179638344801695, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863, 0.76789863,
       0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 6, 'Total': np.array([-1.56428589, -1.72098655, -0.50891493, -1.56237827, -0.70421269,
       -1.42118872]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111, 0.77412111,
       0.77412111]), 'Intra event': np.array([-0.95025932, -1.04545053, -0.30915139, -0.9491005 , -0.42778924,
       -0.86333185]), 'Inter event': np.array([-0.2606874 , -0.28680148, -0.0848104 , -0.2603695 , -0.11735667,
       -0.23684034]), 'dS2ss': -0.7575138035274336, 'dWo,es': np.array([-0.19274552, -0.28793672,  0.44836242, -0.19158669,  0.32972456,
       -0.10581804]), 'phi_ss,s': 0.3090981898869966, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526, 0.35917526,
       0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259, 0.68575259,
       0.68575259])}, 'SA(1.0)': {'events': 6, 'Total': np.array([-1.00064475e+00, -1.89312086e+00,  3.36279896e-04, -7.36405970e-01,
        3.66938697e-02, -1.25601948e+00]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834, 0.74499834,
       0.74499834]), 'Intra event': np.array([-5.85506926e-01, -1.10772118e+00,  1.96767343e-04, -4.30892979e-01,
        2.14706717e-02, -7.34934259e-01]), 'Inter event': np.array([-1.59971748e-01, -3.02650721e-01,  5.37606210e-05, -1.17728246e-01,
        5.86620027e-03, -2.00798168e-01]), 'dS2ss': -0.4728979836678091, 'dWo,es': np.array([-0.11260894, -0.63482319,  0.47309475,  0.042005  ,  0.49436866,
       -0.26203627]), 'phi_ss,s': 0.4368816090362556, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143, 0.34511143,
       0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286, 0.66024286,
       0.66024286])}}}, {'KothaEtAl2020': {'PGA': {'events': 4, 'Total': np.array([-2.02111996, -1.4632174 , -1.05843207, -2.15085245]), 'Expected total': np.array([0.88405639, 0.88405639, 0.88405639, 0.88405639]), 'Intra event': np.array([-1.3406269 , -0.97056515, -0.70206743, -1.42667961]), 'Inter event': np.array([-0.44615712, -0.32300154, -0.2336462 , -0.47479524]), 'dS2ss': -1.109984773622863, 'dWo,es': np.array([-0.23064212,  0.13941962,  0.40791734, -0.31669484]), 'phi_ss,s': 0.33631621928089506, 'Expected inter': np.array([0.44176149, 0.44176149, 0.44176149, 0.44176149]), 'Expected intra': np.array([0.76576921, 0.76576921, 0.76576921, 0.76576921])}, 'SA(1.0)': {'events': 4, 'Total': np.array([-1.70943212, -1.24571295, -0.56503766, -1.99488366]), 'Expected total': np.array([0.8870634, 0.8870634, 0.8870634, 0.8870634]), 'Intra event': np.array([-1.13633133, -0.82807773, -0.37560427, -1.32608296]), 'Inter event': np.array([-0.38004333, -0.27694864, -0.12561996, -0.44350531]), 'dS2ss': -0.9165240729697457, 'dWo,es': np.array([-0.21980726,  0.08844635,  0.5409198 , -0.40955889]), 'phi_ss,s': 0.4149179467221112, 'Expected inter': np.array([0.4440869, 0.4440869, 0.4440869, 0.4440869]), 'Expected intra': np.array([0.76789863, 0.76789863, 0.76789863, 0.76789863])}}, 'LanzanoEtAl2019_RJB_OMO': {'PGA': {'events': 4, 'Total': np.array([-1.91259084, -1.18028332, -0.78029463, -2.03858114]), 'Expected total': np.array([0.77412111, 0.77412111, 0.77412111, 0.77412111]), 'Intra event': np.array([-1.1618447 , -0.71698865, -0.47400686, -1.23838024]), 'Inter event': np.array([-0.31873224, -0.19669358, -0.13003568, -0.33972845]), 'dS2ss': -0.8978051130366076, 'dWo,es': np.array([-0.26403959,  0.18081646,  0.42379825, -0.34057512]), 'phi_ss,s': 0.3642379573133884, 'Expected inter': np.array([0.35917526, 0.35917526, 0.35917526, 0.35917526]), 'Expected intra': np.array([0.68575259, 0.68575259, 0.68575259, 0.68575259])}, 'SA(1.0)': {'events': 4, 'Total': np.array([-1.74458012, -1.12123007, -0.38275105, -2.07988316]), 'Expected total': np.array([0.74499834, 0.74499834, 0.74499834, 0.74499834]), 'Intra event': np.array([-1.02080558, -0.65606498, -0.22395899, -1.21700134]), 'Inter event': np.array([-0.27890371, -0.17924956, -0.0611899 , -0.33250816]), 'dS2ss': -0.779457722708933, 'dWo,es': np.array([-0.24134786,  0.12339275,  0.55549873, -0.43754362]), 'phi_ss,s': 0.4372252723782528, 'Expected inter': np.array([0.34511143, 0.34511143, 0.34511143, 0.34511143]), 'Expected intra': np.array([0.66024286, 0.66024286, 0.66024286, 0.66024286])}}}]
